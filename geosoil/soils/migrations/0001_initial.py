# Generated by Django 5.2.1 on 2025-06-17 12:03

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('depth_top', models.DecimalField(decimal_places=2, help_text='Top depth in centimeters', max_digits=5)),
                ('depth_bottom', models.DecimalField(decimal_places=2, help_text='Bottom depth in centimeters', max_digits=5)),
                ('description', models.TextField(blank=True)),
                ('carbon_content', models.DecimalField(blank=True, decimal_places=2, help_text='Carbon content in gt/ha', max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=255)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('disable', models.BooleanField(default=False, help_text='Disable this property, it will not be used in the profile or layer')),
                ('property_type', models.CharField(choices=[('PF', 'profil'), ('LY', 'couche')], default='PF', help_text='Type of property: PF for profile, LY for layer', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoilProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_id', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=255, unique=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(help_text='Geographic location of the profile', srid=4326)),
                ('description', models.TextField(blank=True)),
                ('date_de_prelevement', models.DateTimeField(blank=True, help_text='Date of sampling', null=True)),
                ('pays', models.CharField(blank=True, help_text='Country where the profile is located', max_length=100, null=True)),
                ('sentinel_data', models.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(blank=True, help_text='Link to the source', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LayerProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=255)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('layer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='soils.layer')),
            ],
        ),
        migrations.AddField(
            model_name='layer',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layers', to='soils.soilprofile'),
        ),
        migrations.AddField(
            model_name='soilprofile',
            name='source',
            field=models.ForeignKey(help_text='Source of the profile data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='soil_profiles', to='soils.source'),
        ),
        migrations.CreateModel(
            name='ProfileProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=255)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_properties', to='soils.property')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='soils.soilprofile')),
            ],
            options={
                'unique_together': {('profile', 'property')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='soilprofile',
            unique_together={('location', 'source')},
        ),
    ]
